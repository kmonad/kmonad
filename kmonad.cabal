cabal-version: 2.2

name:           kmonad
category:       Application
version:        0.4.1
synopsis:       Advanced keyboard remapping utility
author:         David Janssen
maintainer:     janssen.dhj@gmail.com
license:        MIT
license-file:   LICENSE
build-type:     Simple
description:
  KMonad is a cross-platform command-line utility that runs as a daemon. It
  captures keyboard input (exactly how depends on the OS) and remaps it. The
  mapping is highly configurable, and provides options like (transparent) layer
  overlays, tap-mod buttons, multi-tap buttons, leader-key style buttons, and
  keyboard macros. Functionality heavily inspired by the QMK-firmware.

extra-source-files:
    changelog.md

flag kext
    description: build against the kext [macOS only]
    default: False

flag dext
    description: build against the dext [macOS only]
    default: False

-- Properties shared between library and test-suite
common shared-props
  default-extensions:
      ConstraintKinds
      DeriveFunctor
      DeriveGeneric
      DeriveTraversable
      FlexibleContexts
      FlexibleInstances
      FunctionalDependencies
      GeneralizedNewtypeDeriving
      LambdaCase
      MultiParamTypeClasses
      MultiWayIf
      NoImplicitPrelude
      OverloadedStrings
      RankNTypes
      TemplateHaskell
      TupleSections
      TypeFamilies
  build-depends:
      base
    , cereal
    , hspec
    , lens
    , megaparsec
    , mtl
    , optparse-applicative
    , resourcet
    , rio
    , time
    , unliftio
  default-language: Haskell2010


library
  import: shared-props
  hs-source-dirs:
      src
  ghc-options:
    -Wall
    -Wno-name-shadowing
    -Wno-unused-imports
  exposed-modules:
      KMonad.App
      KMonad.App.Main
      KMonad.App.Main.OS
      KMonad.App.Main.Run
      KMonad.App.Main.Loop
      KMonad.App.Types
      KMonad.App.Invocation
      KMonad.App.Invocation.IO
      KMonad.App.Invocation.Operations
      KMonad.App.Invocation.Parser
      KMonad.App.Invocation.Types
      KMonad.App.KeyIO
      KMonad.App.KeyIO.Common
      KMonad.App.KeyIO.OS
      KMonad.App.Parser
      KMonad.App.Parser.IO
      KMonad.App.Parser.Keycode
      KMonad.App.Parser.Operations
      KMonad.App.Parser.TokenJoiner
      KMonad.App.Parser.Tokenizer
      KMonad.App.Parser.Types
      KMonad.Model
      KMonad.Model.Types
      KMonad.Model.IO
      KMonad.Pullchain
      KMonad.Pullchain.Action
      KMonad.Pullchain.Button
      KMonad.Pullchain.Env
      KMonad.Pullchain.IO
      KMonad.Pullchain.Loop
      KMonad.Pullchain.Operations
      KMonad.Pullchain.Types
      KMonad.Pullchain.Components.Dispatch
      KMonad.Pullchain.Components.Keymap
      KMonad.Pullchain.Components.Hooks
      KMonad.Pullchain.Components.Sluice
      KMonad.Prelude
      KMonad.Prelude.Imports
      KMonad.Prelude.Types
      KMonad.Prelude.Util
      KMonad.Util
      KMonad.Util.Ctx
      KMonad.Util.LayerStack
      KMonad.Util.Logging
      KMonad.Util.Logging.IO
      KMonad.Util.Logging.Operations
      KMonad.Util.Logging.Types
      KMonad.Util.Time
      KMonad.Util.Time.IO
      KMonad.Util.Time.Operations
      KMonad.Util.Time.Types
      KMonad.Util.FFI
      KMonad.Util.Keyboard
      KMonad.Util.Keyboard.Common
      KMonad.Util.Keyboard.Compose
      KMonad.Util.Keyboard.IO
      KMonad.Util.Keyboard.OS
      KMonad.Util.Keyboard.Operations
      KMonad.Util.Keyboard.Keynames
      KMonad.Util.Keyboard.Types
      KMonad.Util.Name
      KMonad.Util.OS

  -- Linux block
  if os(linux)
    exposed-modules:
      KMonad.App.KeyIO.Linux
      KMonad.App.KeyIO.Linux.Evdev
      KMonad.App.KeyIO.Linux.IO
      KMonad.App.KeyIO.Linux.Uinput
      KMonad.Util.Keyboard.Linux
    c-sources:
      c_src/keyio.c
    build-depends:
      unix

  -- Windows block
  if os(windows)
    exposed-modules:
      KMonad.App.KeyIO.Windows
      KMonad.App.KeyIO.Windows.IO
      KMonad.App.KeyIO.Windows.LowLevelHook
      KMonad.App.KeyIO.Windows.SendEvent
      KMonad.Util.Keyboard.Windows
    c-sources:
      c_src/keyio_win.c
    build-depends:
      Win32

  -- Mac block
  if os(darwin)
    exposed-modules:
      KMonad.App.KeyIO.Mac
      KMonad.App.KeyIO.Mac.IO
      KMonad.App.KeyIO.Mac.IOKitSource
      KMonad.App.KeyIO.Mac.Ext
      KMonad.Util.Keyboard.Mac
    if flag(kext)
      cxx-sources:
        c_src/mac/kext.cpp
      cxx-options:
        -std=c++14
    if flag(dext)
      cxx-sources:
        c_src/mac/dext.cpp
      cxx-options:
        -std=c++2a
    extra-libraries:
      c++
    build-depends:
      unix
    frameworks:
      CoreFoundation
      IOKit

executable kmonad
  ghc-options:
      -threaded
      -rtsopts
      -with-rtsopts=-N
  main-is:
      Main.hs
  default-language:
      Haskell2010
  hs-source-dirs:
      app
  build-depends:
      base
    , kmonad

test-suite spec
  import:  shared-props
  type:    exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs:
      test
  ghc-options:
      -Wall
  build-depends:
      base
    , kmonad
  other-modules:
      KMonad.Util.KeyboardSpec
  default-language:
      Haskell2010
  build-tool-depends: hspec-discover:hspec-discover == 2.*
